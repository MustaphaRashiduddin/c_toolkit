!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
LINKED_LIST_H	ds/linked_list.h	2;"	d
MALLOC	sayf_debug/sayf_memory.h	4;"	d
MallocedDataInfo	sayf_debug/sayf_memory.c	/^struct MallocedDataInfo {$/;"	s	file:
Node	ds/linked_list.h	/^struct Node {$/;"	s
create	ds/linked_list.c	/^struct Node *create(void *data)$/;"	f
data	ds/linked_list.h	/^    void *data;$/;"	m	struct:Node
dealloc	ds/linked_list.c	/^struct Node *dealloc(struct Node *current, void (*free_node)(struct Node *))$/;"	f
death_walker	ds/linked_list.c	/^void death_walker(struct Node *current, void *data) $/;"	f
del	ds/linked_list.c	/^void del(struct Node **current, void *data)$/;"	f
file	sayf_debug/sayf_memory.c	/^    char *file;$/;"	m	struct:MallocedDataInfo	file:
free_node	sayf_debug/sayf_memory.c	/^void free_node(struct Node *cur)$/;"	f
getstr_m	sayf_debug/sayf_memory.c	/^char *getstr_m(char * s) $/;"	f
init_malloced_data_info	sayf_debug/sayf_memory.c	/^struct MallocedDataInfo *init_malloced_data_info(void *p, size_t size, int n, char *file, int line, char *type)$/;"	f
line	sayf_debug/sayf_memory.c	/^    int line;$/;"	m	struct:MallocedDataInfo	file:
main	ds/main.c	/^int main() {$/;"	f
main	ds/voidPointerTut.c	/^int main(int argc, char **argv)$/;"	f
main	main.c	/^int main()$/;"	f
main	tuts/main.c	/^int main(int argc, char** argv)$/;"	f
malloc_and_log	sayf_debug/sayf_memory.c	/^void* malloc_and_log(size_t size, int n, char *file, int line, char *type) $/;"	f
my_malloc	tuts/main.c	/^void my_malloc(void** p, size_t size)$/;"	f
n	sayf_debug/sayf_memory.c	/^    int n;$/;"	m	struct:MallocedDataInfo	file:
next	ds/linked_list.h	/^    struct Node *next;$/;"	m	struct:Node	typeref:struct:Node::Node
p	sayf_debug/sayf_memory.c	/^    void *p;$/;"	m	struct:MallocedDataInfo	file:
print	ds/linked_list.c	/^void print(struct Node *current, void (*ptr_print_node)(struct Node *current))$/;"	f
print_int_node	ds/main.c	/^void print_int_node(struct Node *current)$/;"	f
print_node	sayf_debug/sayf_memory.c	/^void print_node(struct Node *cur)$/;"	f
print_string_node	ds/main.c	/^void print_string_node(struct Node *current)$/;"	f
printer	sayf_debug/sayf_memory.c	/^void printer()$/;"	f
push	ds/linked_list.c	/^void push(struct Node *current, void *data)$/;"	f
root	sayf_debug/sayf_memory.c	/^struct Node *root;$/;"	v	typeref:struct:Node
sayf_memory_end	sayf_debug/sayf_memory.c	/^void sayf_memory_end() $/;"	f
sayf_memory_start	sayf_debug/sayf_memory.c	/^void sayf_memory_start() $/;"	f
size	sayf_debug/sayf_memory.c	/^    size_t size;$/;"	m	struct:MallocedDataInfo	file:
type	sayf_debug/sayf_memory.c	/^    char *type;$/;"	m	struct:MallocedDataInfo	file:
walker	ds/linked_list.c	/^struct Node *walker(struct Node *current)$/;"	f
