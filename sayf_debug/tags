!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
FREE	sayf_memory.h	5;"	d
MALLOC	sayf_memory.h	4;"	d
MallocedDataInfo	sayf_memory.c	/^struct MallocedDataInfo {$/;"	s	file:
comp_mallocedData	sayf_memory.c	/^int comp_mallocedData(void *malloced_dat, void *p) {$/;"	f
file	sayf_memory.c	/^        char *file;$/;"	m	struct:MallocedDataInfo	file:
free_and_log	sayf_memory.c	/^void free_and_log(void *p)$/;"	f
free_node	sayf_memory.c	/^void free_node(struct Node *cur)$/;"	f
getstr_m	sayf_memory.c	/^char *getstr_m(char *s) $/;"	f
init_malloced_data_info	sayf_memory.c	/^struct MallocedDataInfo *init_malloced_data_info(void *p, size_t size, int n, char *file, int line, char *type)$/;"	f
line	sayf_memory.c	/^        int line;$/;"	m	struct:MallocedDataInfo	file:
malloc_and_log	sayf_memory.c	/^void *malloc_and_log(size_t size, int n, char *file, int line, char *type) $/;"	f
n	sayf_memory.c	/^        int n;$/;"	m	struct:MallocedDataInfo	file:
p	sayf_memory.c	/^        void *p;$/;"	m	struct:MallocedDataInfo	file:
print_node	sayf_memory.c	/^void print_node(struct Node *cur)$/;"	f
printer	sayf_memory.c	/^void printer()$/;"	f
root	sayf_memory.c	/^struct Node *root;$/;"	v	typeref:struct:Node
sayf_memory_end	sayf_memory.c	/^void sayf_memory_end() $/;"	f
sayf_memory_start	sayf_memory.c	/^void sayf_memory_start() $/;"	f
size	sayf_memory.c	/^        size_t size;$/;"	m	struct:MallocedDataInfo	file:
type	sayf_memory.c	/^        char *type;$/;"	m	struct:MallocedDataInfo	file:
